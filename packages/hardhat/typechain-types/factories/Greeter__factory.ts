/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getMyNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "myAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "myNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "myString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600860015573e61ba2d15d91fcd2b7b24f9c2be8757375b8b0cd600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280600a81526020017f576861742069732075700000000000000000000000000000000000000000000081525060039080519060200190620000ab929190620001fe565b50348015620000b957600080fd5b5060405162000f9d38038062000f9d8339818101604052810190620000df919062000320565b6200010f60405180606001604052806022815260200162000f7b60229139826200012f60201b620004011760201c565b806000908051906020019062000127929190620001fe565b50506200056d565b620001d1828260405160240162000148929190620003a6565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050620001d560201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546200020c9062000492565b90600052602060002090601f0160209004810192826200023057600085556200027c565b82601f106200024b57805160ff19168380011785556200027c565b828001600101855582156200027c579182015b828111156200027b5782518255916020019190600101906200025e565b5b5090506200028b91906200028f565b5090565b5b80821115620002aa57600081600090555060010162000290565b5090565b6000620002c5620002bf846200040a565b620003e1565b905082815260208101848484011115620002de57600080fd5b620002eb8482856200045c565b509392505050565b600082601f8301126200030557600080fd5b815162000317848260208601620002ae565b91505092915050565b6000602082840312156200033357600080fd5b600082015167ffffffffffffffff8111156200034e57600080fd5b6200035c84828501620002f3565b91505092915050565b6000620003728262000440565b6200037e81856200044b565b9350620003908185602086016200045c565b6200039b816200055c565b840191505092915050565b60006040820190508181036000830152620003c2818562000365565b90508181036020830152620003d8818462000365565b90509392505050565b6000620003ed62000400565b9050620003fb8282620004c8565b919050565b6000604051905090565b600067ffffffffffffffff8211156200042857620004276200052d565b5b62000433826200055c565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200047c5780820151818401526020810190506200045f565b838111156200048c576000848401525b50505050565b60006002820490506001821680620004ab57607f821691505b60208210811415620004c257620004c1620004fe565b5b50919050565b620004d3826200055c565b810181811067ffffffffffffffff82111715620004f557620004f46200052d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6109fe806200057d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637e7b8a961161005b5780637e7b8a96146100dc578063a4136862146100fa578063b32e737f14610116578063cfae3217146101345761007d565b806323fd0e401461008257806326b85ee1146100a0578063492bfa18146100be575b600080fd5b61008a610152565b60405161009791906107c8565b60405180910390f35b6100a8610158565b6040516100b59190610708565b60405180910390f35b6100c661017e565b6040516100d39190610723565b60405180910390f35b6100e461020c565b6040516100f19190610723565b60405180910390f35b610114600480360381019061010f9190610670565b61029e565b005b61011e610365565b60405161012b91906107c8565b60405180910390f35b61013c61036f565b6040516101499190610723565b60405180910390f35b60015481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003805461018b906108d3565b80601f01602080910402602001604051908101604052809291908181526020018280546101b7906108d3565b80156102045780601f106101d957610100808354040283529160200191610204565b820191906000526020600020905b8154815290600101906020018083116101e757829003601f168201915b505050505081565b60606003805461021b906108d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610247906108d3565b80156102945780601f1061026957610100808354040283529160200191610294565b820191906000526020600020905b81548152906001019060200180831161027757829003601f168201915b5050505050905090565b61034b6040518060600160405280602381526020016109a660239139600080546102c7906108d3565b80601f01602080910402602001604051908101604052809291908181526020018280546102f3906108d3565b80156103405780601f1061031557610100808354040283529160200191610340565b820191906000526020600020905b81548152906001019060200180831161032357829003601f168201915b50505050508361049d565b8060009080519060200190610361929190610565565b5050565b6000600154905090565b60606000805461037e906108d3565b80601f01602080910402602001604051908101604052809291908181526020018280546103aa906108d3565b80156103f75780601f106103cc576101008083540402835291602001916103f7565b820191906000526020600020905b8154815290600101906020018083116103da57829003601f168201915b5050505050905090565b6104998282604051602401610417929190610745565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061053c565b5050565b6105378383836040516024016104b59392919061077c565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061053c565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b828054610571906108d3565b90600052602060002090601f01602090048101928261059357600085556105da565b82601f106105ac57805160ff19168380011785556105da565b828001600101855582156105da579182015b828111156105d95782518255916020019190600101906105be565b5b5090506105e791906105eb565b5090565b5b808211156106045760008160009055506001016105ec565b5090565b600061061b61061684610808565b6107e3565b90508281526020810184848401111561063357600080fd5b61063e848285610891565b509392505050565b600082601f83011261065757600080fd5b8135610667848260208601610608565b91505092915050565b60006020828403121561068257600080fd5b600082013567ffffffffffffffff81111561069c57600080fd5b6106a884828501610646565b91505092915050565b6106ba81610855565b82525050565b60006106cb82610839565b6106d58185610844565b93506106e58185602086016108a0565b6106ee81610994565b840191505092915050565b61070281610887565b82525050565b600060208201905061071d60008301846106b1565b92915050565b6000602082019050818103600083015261073d81846106c0565b905092915050565b6000604082019050818103600083015261075f81856106c0565b9050818103602083015261077381846106c0565b90509392505050565b6000606082019050818103600083015261079681866106c0565b905081810360208301526107aa81856106c0565b905081810360408301526107be81846106c0565b9050949350505050565b60006020820190506107dd60008301846106f9565b92915050565b60006107ed6107fe565b90506107f98282610905565b919050565b6000604051905090565b600067ffffffffffffffff82111561082357610822610965565b5b61082c82610994565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061086082610867565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156108be5780820151818401526020810190506108a3565b838111156108cd576000848401525b50505050565b600060028204905060018216806108eb57607f821691505b602082108114156108ff576108fe610936565b5b50919050565b61090e82610994565b810181811067ffffffffffffffff8211171561092d5761092c610965565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a2646970667358221220c46d0cb817398eb6fd4df95bbac2e57b2e0bb29bcf5b9b2e34397b70956b156364736f6c634300080400334465706c6f79696e67206120477265657465722077697468206772656574696e673a";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Greeter";
  }

  deploy(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static readonly contractName: "Greeter";
  public readonly contractName: "Greeter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
